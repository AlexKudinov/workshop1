//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Служебная функция.
Функция ДобавитьШагВМассивТестов(МассивТестов,Снипет,ИмяПроцедуры,ПредставлениеТеста = Неопределено,Транзакция = Неопределено,Параметр = Неопределено)
	Структура = Новый Структура;
	Структура.Вставить("Снипет",Снипет);
	Структура.Вставить("ИмяПроцедуры",ИмяПроцедуры);
	Структура.Вставить("ИмяПроцедуры",ИмяПроцедуры);
	Структура.Вставить("ПредставлениеТеста",ПредставлениеТеста);
	Структура.Вставить("Транзакция",Транзакция);
	Структура.Вставить("Параметр",Параметр);
	МассивТестов.Добавить(Структура);
КонецФункции

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	ДобавитьШагВМассивТестов(ВсеТесты,"ЯНахожульВПоддерживаемойКонфигурации()","ЯНахожульВПоддерживаемойКонфигурации","Допустим я нахожуль в поддерживаемой конфигурации");
	ДобавитьШагВМассивТестов(ВсеТесты,"ЯОткрываюСвоюОбработку()","ЯОткрываюСвоюОбработку","Когда   я открываю свою обработку");
	ДобавитьШагВМассивТестов(ВсеТесты,"НажимаюКнопку()","НажимаюКнопку","И нажимаю кнопку");
	ДобавитьШагВМассивТестов(ВсеТесты,"СоздаётсяДокумент()","СоздаётсяДокумент","Тогда   создаётся документ");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим я нахожуль в поддерживаемой конфигурации
//@ЯНахожульВПоддерживаемойКонфигурации()
Процедура ЯНахожульВПоддерживаемойКонфигурации() Экспорт
	ИмяТекущей = ТекущаяКонфигурация();
	ИмяПоддерживаемой = "БизнессПроцессы";
	//ВызватьИсключение "Не реализовано.";
	Ванесса.ПроверитьРавенство(ИмяТекущей,ИмяПоддерживаемой,"Это не поддерживаемая конфигурация" );
КонецПроцедуры

&НаКлиенте

Процедура ПроверяемнаРавенсво(Значение1,Значение2,текст)
	Если Значение1 = Значение2 Тогда 
		Возврат
	КонецЕсли;
	ВызватьИсключение текст;
КонецПроцедуры



&НаСервере
//Допустим я нахожуль в поддерживаемой конфигурации
//@ЯНахожульВПоддерживаемойКонфигурации()
Функция ТекущаяКонфигурация() Экспорт
Возврат  Метаданные.Имя;
КонецФункции


&НаКлиенте
//Когда   я открываю свою обработку
//@ЯОткрываюСвоюОбработку()
Процедура ЯОткрываюСвоюОбработку() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//И нажимаю кнопку
//@НажимаюКнопку()
Процедура НажимаюКнопку() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Тогда   создаётся документ
//@СоздаётсяДокумент()
Процедура СоздаётсяДокумент() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

//окончание текста модуля